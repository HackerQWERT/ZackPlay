// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(FlightBookingDbContext))]
    [Migration("20250929052824_AddUsers")]
    partial class AddUsers
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Infrastructure.Repositories.FlightBooking.Po.AirportPo", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasComment("机场三字码，如PEK、SHA");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("所在城市");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("所在国家");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasComment("是否启用");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("机场名称");

                    b.Property<string>("TimeZone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("时区");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Code");

                    b.HasIndex("City")
                        .HasDatabaseName("IX_airports_city");

                    b.HasIndex("Country")
                        .HasDatabaseName("IX_airports_country");

                    b.ToTable("airports", (string)null);
                });

            modelBuilder.Entity("Infrastructure.Repositories.FlightBooking.Po.FlightBookingPo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BookingReference")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("预订参考号");

                    b.Property<DateTime>("BookingTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CabinClass")
                        .HasColumnType("int")
                        .HasComment("舱位等级：0=经济舱,1=高端经济舱,2=商务舱,3=头等舱");

                    b.Property<string>("CancellationReason")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("取消原因");

                    b.Property<DateTime?>("CancellationTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CheckInTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ConfirmationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FlightId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PassengerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PaymentReference")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("支付参考号");

                    b.Property<int>("PaymentStatus")
                        .HasColumnType("int")
                        .HasComment("支付状态：0=待支付,1=已支付,2=支付失败,3=已退款");

                    b.Property<DateTime?>("PaymentTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("RefundAmount")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("退款金额");

                    b.Property<int>("SeatsCount")
                        .HasColumnType("int");

                    b.Property<string>("SpecialRequests")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("特殊要求");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasComment("预订状态：0=待确认,1=已确认,2=已登机,3=已取消");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("总金额");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("单价");

                    b.HasKey("Id");

                    b.HasIndex("BookingReference")
                        .IsUnique()
                        .HasDatabaseName("IX_bookings_reference_unique");

                    b.HasIndex("BookingTime")
                        .HasDatabaseName("IX_bookings_time");

                    b.HasIndex("FlightId")
                        .HasDatabaseName("IX_bookings_flight");

                    b.HasIndex("PassengerId")
                        .HasDatabaseName("IX_bookings_passenger");

                    b.HasIndex("PaymentStatus")
                        .HasDatabaseName("IX_bookings_payment_status");

                    b.HasIndex("Status")
                        .HasDatabaseName("IX_bookings_status");

                    b.ToTable("flight_bookings", (string)null);
                });

            modelBuilder.Entity("Infrastructure.Repositories.FlightBooking.Po.FlightPo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AircraftType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("机型，如A320");

                    b.Property<string>("AirlineCode")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasComment("航空公司代码，如CZ");

                    b.Property<string>("AirlineName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("航空公司名称");

                    b.Property<string>("ArrivalAirportCode")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasComment("到达机场代码");

                    b.Property<string>("ArrivalTerminal")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasComment("到达航站楼");

                    b.Property<DateTime>("ArrivalTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("AvailableSeats")
                        .HasColumnType("int");

                    b.Property<decimal>("BasePrice")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("基础价格");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DepartureAirportCode")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasComment("出发机场代码");

                    b.Property<string>("DepartureTerminal")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasComment("出发航站楼");

                    b.Property<DateTime>("DepartureTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("FlightNumber")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .HasComment("航班号，如CZ3456");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasComment("航班状态：0=计划中,1=登机中,2=已起飞,3=飞行中,4=已到达,5=延误,6=取消");

                    b.Property<int>("TotalSeats")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AirlineCode")
                        .HasDatabaseName("IX_flights_airline");

                    b.HasIndex("Status")
                        .HasDatabaseName("IX_flights_status");

                    b.HasIndex("FlightNumber", "DepartureTime")
                        .IsUnique()
                        .HasDatabaseName("IX_flights_number_departure");

                    b.HasIndex("DepartureAirportCode", "ArrivalAirportCode", "DepartureTime")
                        .HasDatabaseName("IX_flights_route_time");

                    b.ToTable("flights", (string)null);
                });

            modelBuilder.Entity("Infrastructure.Repositories.FlightBooking.Po.PassengerPo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("邮箱地址");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("名字");

                    b.Property<int>("Gender")
                        .HasColumnType("int")
                        .HasComment("性别：0=男,1=女,2=其他");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("姓氏");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("国籍");

                    b.Property<string>("PassportCountry")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasComment("护照签发国代码");

                    b.Property<DateTime>("PassportExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PassportNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("护照号码");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("电话号码");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasComment("乘客类型：0=婴儿,1=儿童,2=成人,3=老人");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("IX_passengers_email_unique");

                    b.HasIndex("PassportNumber")
                        .IsUnique()
                        .HasDatabaseName("IX_passengers_passport_unique");

                    b.ToTable("passengers", (string)null);
                });

            modelBuilder.Entity("Infrastructure.Repositories.User.Po.UserPo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasComment("创建时间（UTC）");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("显示名称");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasComment("邮箱");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasComment("是否启用");

                    b.Property<DateTime?>("LastLoginAt")
                        .HasColumnType("datetime2")
                        .HasComment("最后登录时间（UTC）");

                    b.Property<string>("NormalizedEmail")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasComment("规范化邮箱（大写）");

                    b.Property<string>("NormalizedUsername")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("规范化用户名（大写）");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasComment("密码哈希");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasComment("角色");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasComment("更新时间（UTC）");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("登录用户名");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .IsUnique()
                        .HasDatabaseName("UX_users_normalized_email");

                    b.HasIndex("NormalizedUsername")
                        .IsUnique()
                        .HasDatabaseName("UX_users_normalized_username");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("Infrastructure.Repositories.FlightBooking.Po.FlightBookingPo", b =>
                {
                    b.HasOne("Infrastructure.Repositories.FlightBooking.Po.FlightPo", null)
                        .WithMany()
                        .HasForeignKey("FlightId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Infrastructure.Repositories.FlightBooking.Po.PassengerPo", null)
                        .WithMany()
                        .HasForeignKey("PassengerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
